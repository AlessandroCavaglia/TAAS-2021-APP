{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport TinderCard from \"./TinderCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SCREEN_HEIGHT = Dimensions.get('window').height;\nvar SCREEN_WIDTH = Dimensions.get('window').width;\nvar SHOWABLE_CARDS = 3;\nvar styles = StyleSheet.create({\n  animatedView: {\n    height: SCREEN_HEIGHT - 200,\n    width: SCREEN_WIDTH - 120,\n    padding: 10,\n    backgroundColor: '#fa0000',\n    position: 'absolute'\n  },\n  cardView: {\n    height: \"100%\",\n    width: \"100%\",\n    position: 'absolute'\n  },\n  viewContainer: {\n    flex: 1,\n    paddingLeft: \"7%\",\n    paddingRight: \"7%\"\n  },\n  topText: {\n    paddingTop: \"8%\",\n    paddingBottom: \"3%\",\n    fontSize: 30,\n    fontWeight: \"bold\"\n  },\n  cardContainer: {\n    flex: 1,\n    height: \"60%\",\n    maxHeight: \"60%\"\n  }\n});\nvar Cards = [{\n  id: \"1\",\n  color: '#00ffcc',\n  title: 'Xbox'\n}, {\n  id: \"2\",\n  color: '#ffd500',\n  title: 'Bicicletta'\n}, {\n  id: \"3\",\n  color: '#08ff00',\n  title: 'laptop HP'\n}, {\n  id: \"4\",\n  color: '#1a0dd2',\n  title: 'Stereo'\n}, {\n  id: \"5\",\n  color: '#ff0000',\n  title: 'Monitor Dell'\n}];\n\nvar ProductTab = function (_React$Component) {\n  _inherits(ProductTab, _React$Component);\n\n  var _super = _createSuper(ProductTab);\n\n  function ProductTab() {\n    var _this;\n\n    _classCallCheck(this, ProductTab);\n\n    _this = _super.call(this);\n\n    _this.renderCards = function () {\n      return Cards.map(function (item, i) {\n        if (i < _this.state.currentIndex) {\n          return null;\n        } else if (Math.abs(_this.state.currentIndex - i) < SHOWABLE_CARDS) return _jsx(Animated.View, _objectSpread(_objectSpread({\n            style: i === _this.state.currentIndex ? [styles.cardView, _this.rotateAndTranslate] : [styles.cardView, {\n              marginTop: _this.nextCardPosition\n            }]\n          }, _this.PanResponder.panHandlers), {}, {\n            children: _jsx(TinderCard, {\n              elem: item,\n              actualIndex: _this.state.currentIndex\n            })\n          }));else if (Math.abs(_this.state.currentIndex - i) === SHOWABLE_CARDS) return _jsx(Animated.View, _objectSpread(_objectSpread({\n            style: i === _this.state.currentIndex ? [styles.cardView, _this.rotateAndTranslate] : [styles.cardView, {\n              marginTop: _this.nextCardPosition,\n              opacity: _this.nextCardOpacity\n            }]\n          }, _this.PanResponder.panHandlers), {}, {\n            children: _jsx(TinderCard, {\n              elem: item,\n              actualIndex: _this.state.currentIndex\n            })\n          }));\n      }).reverse();\n    };\n\n    _this.position = new Animated.ValueXY();\n    _this.state = {\n      currentIndex: 0\n    };\n    _this.rotate = _this.position.x.interpolate({\n      inputRange: [-SCREEN_WIDTH / 2, 0, SCREEN_WIDTH / 2],\n      outputRange: ['-10deg', '0deg', '10deg'],\n      extrapolate: 'clamp'\n    });\n    _this.rotateAndTranslate = {\n      transform: [{\n        rotate: _this.rotate\n      }].concat(_toConsumableArray(_this.position.getTranslateTransform()))\n    };\n    _this.nextCardPosition = _this.position.x.interpolate({\n      inputRange: [-SCREEN_WIDTH / 2, 0, SCREEN_WIDTH / 2],\n      outputRange: [-15, 0, -15],\n      extrapolate: 'clamp'\n    });\n    _this.nextCardOpacity = _this.position.x.interpolate({\n      inputRange: [-SCREEN_WIDTH / 2, 0, SCREEN_WIDTH / 2],\n      outputRange: [1, 0, 1],\n      extrapolate: 'clamp'\n    });\n    _this.PanResponder = PanResponder.create({\n      onStartShouldSetPanResponder: function onStartShouldSetPanResponder(evt, gestureState) {\n        return true;\n      },\n      onPanResponderMove: function onPanResponderMove(evt, gestureState) {\n        _this.position.setValue({\n          x: gestureState.dx,\n          y: gestureState.dy\n        });\n      },\n      onPanResponderRelease: function onPanResponderRelease(evt, gestureState) {\n        if (gestureState.dx > 120) {\n          console.log(\"Swipe a Destra\");\n          Animated.spring(_this.position, {\n            toValue: {\n              x: SCREEN_WIDTH + 100,\n              y: gestureState.dy\n            },\n            useNativeDriver: true\n          }).start(function () {\n            _this.setState({\n              currentIndex: _this.state.currentIndex + 1\n            }, function () {\n              _this.position.setValue({\n                x: 0,\n                y: 0\n              });\n            });\n          });\n        } else if (gestureState.dx < -120) {\n          console.log(\"Swipe a Sinistra\");\n          Animated.spring(_this.position, {\n            toValue: {\n              x: -SCREEN_WIDTH - 100,\n              y: gestureState.dy\n            },\n            useNativeDriver: true\n          }).start(function () {\n            _this.setState({\n              currentIndex: _this.state.currentIndex + 1\n            }, function () {\n              _this.position.setValue({\n                x: 0,\n                y: 0\n              });\n            });\n          });\n        } else {\n          Animated.spring(_this.position, {\n            toValue: {\n              x: 0,\n              y: 0\n            },\n            friction: 4,\n            useNativeDriver: true\n          }).start();\n        }\n      }\n    });\n    return _this;\n  }\n\n  _createClass(ProductTab, [{\n    key: \"render\",\n    value: function render() {\n      return _jsxs(View, {\n        style: styles.viewContainer,\n        children: [_jsx(Text, {\n          style: styles.topText,\n          children: \"Scopri\"\n        }), _jsx(View, {\n          style: {\n            height: \"10%\"\n          }\n        }), _jsx(View, {\n          style: styles.cardContainer,\n          children: this.renderCards()\n        })]\n      });\n    }\n  }]);\n\n  return ProductTab;\n}(React.Component);\n\nexport { ProductTab as default };","map":{"version":3,"sources":["D:/UniversityProjects/Taas/Front-End TAAS/Taas-App/components/productTab/ProductTab.js"],"names":["React","useEffect","TinderCard","SCREEN_HEIGHT","Dimensions","get","height","SCREEN_WIDTH","width","SHOWABLE_CARDS","styles","StyleSheet","create","animatedView","padding","backgroundColor","position","cardView","viewContainer","flex","paddingLeft","paddingRight","topText","paddingTop","paddingBottom","fontSize","fontWeight","cardContainer","maxHeight","Cards","id","color","title","ProductTab","renderCards","map","item","i","state","currentIndex","Math","abs","rotateAndTranslate","marginTop","nextCardPosition","PanResponder","panHandlers","opacity","nextCardOpacity","reverse","Animated","ValueXY","rotate","x","interpolate","inputRange","outputRange","extrapolate","transform","getTranslateTransform","onStartShouldSetPanResponder","evt","gestureState","onPanResponderMove","setValue","dx","y","dy","onPanResponderRelease","console","log","spring","toValue","useNativeDriver","start","setState","friction","Component"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\r\nimport { StyleSheet, Text, View,Button,Animated,Dimensions,PanResponder} from 'react-native';\r\nimport TinderCard from \"./TinderCard\";\r\n\r\nconst SCREEN_HEIGHT = Dimensions.get('window').height\r\nconst SCREEN_WIDTH = Dimensions.get('window').width\r\nconst SHOWABLE_CARDS = 3\r\nconst styles = StyleSheet.create({\r\n    animatedView:{\r\n        height: SCREEN_HEIGHT -200,\r\n        width: SCREEN_WIDTH-120,\r\n        padding: 10,\r\n        backgroundColor:'#fa0000',\r\n        position:'absolute',\r\n    },\r\n    cardView:{\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        position:'absolute'\r\n    },\r\n    viewContainer:{\r\n        flex:1,\r\n        paddingLeft:\"7%\",\r\n        paddingRight:\"7%\",\r\n    },\r\n    topText:{\r\n        paddingTop:\"8%\",\r\n        paddingBottom:\"3%\",\r\n        fontSize:30,\r\n        fontWeight:\"bold\",\r\n    },\r\n    cardContainer:{\r\n        flex:1,\r\n        height: \"60%\",\r\n        maxHeight:\"60%\"\r\n    }\r\n})\r\nconst Cards = [\r\n    { id: \"1\", color: '#00ffcc',title: 'Xbox' },\r\n    { id: \"2\", color: '#ffd500',title: 'Bicicletta'  },\r\n    { id: \"3\", color: '#08ff00',title: 'laptop HP'  },\r\n    { id: \"4\", color: '#1a0dd2',title: 'Stereo'  },\r\n    { id: \"5\", color: '#ff0000',title: 'Monitor Dell'  },\r\n]\r\n\r\nexport default class ProductTab extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.position = new Animated.ValueXY();\r\n        this.state = {\r\n            currentIndex: 0\r\n        }\r\n        this.rotate = this.position.x.interpolate({\r\n            inputRange: [-SCREEN_WIDTH / 2, 0, SCREEN_WIDTH / 2],\r\n            outputRange: ['-10deg', '0deg', '10deg'],\r\n            extrapolate: 'clamp'\r\n        })\r\n        this.rotateAndTranslate = {\r\n            transform: [{\r\n                rotate: this.rotate\r\n            },\r\n                ...this.position.getTranslateTransform()\r\n            ]\r\n        }\r\n        this.nextCardPosition = this.position.x.interpolate({\r\n            inputRange: [-SCREEN_WIDTH / 2, 0, SCREEN_WIDTH / 2],\r\n            outputRange: [-15, 0, -15],\r\n            extrapolate: 'clamp'\r\n        })\r\n        this.nextCardOpacity = this.position.x.interpolate({\r\n            inputRange: [-SCREEN_WIDTH / 2, 0, SCREEN_WIDTH / 2],\r\n            outputRange: [1, 0, 1],\r\n            extrapolate: 'clamp'\r\n        })\r\n        this.PanResponder = PanResponder.create({\r\n            onStartShouldSetPanResponder: (evt, gestureState) => true,\r\n            onPanResponderMove: (evt, gestureState) => {\r\n                this.position.setValue({ x: gestureState.dx, y: gestureState.dy });\r\n            },\r\n            onPanResponderRelease: (evt, gestureState) => {\r\n                if (gestureState.dx > 120) {\r\n                    //Swipe A Destra\r\n                    console.log(\"Swipe a Destra\")\r\n                    Animated.spring(this.position, {\r\n                        toValue: { x: SCREEN_WIDTH + 100, y: gestureState.dy },\r\n                        useNativeDriver: true\r\n                    }).start(() => {\r\n                        this.setState({ currentIndex: this.state.currentIndex + 1 }, () => {\r\n                            this.position.setValue({ x: 0, y: 0 })\r\n                        })\r\n                    })\r\n                } else if (gestureState.dx < -120) {\r\n                    //Swipe A Sinistra\r\n                    console.log(\"Swipe a Sinistra\")\r\n                    Animated.spring(this.position, {\r\n                        toValue: { x: -SCREEN_WIDTH - 100, y: gestureState.dy },\r\n                        useNativeDriver: true\r\n                    }).start(() => {\r\n                        this.setState({ currentIndex: this.state.currentIndex + 1 }, () => {\r\n                            this.position.setValue({ x: 0, y: 0 })\r\n                        })\r\n                    })\r\n                }else {\r\n                    Animated.spring(this.position, {\r\n                        toValue: { x: 0, y: 0 },\r\n                        friction: 4,\r\n                        useNativeDriver: true\r\n                    }).start()\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    renderCards = () =>{\r\n        return Cards.map((item,i) => {\r\n            if (i < this.state.currentIndex) {\r\n                return null;\r\n            } else if (Math.abs(this.state.currentIndex -i) < SHOWABLE_CARDS) //Se è una card nel range di quelle da visualizzare\r\n                return<Animated.View style={ i===this.state.currentIndex ?      //La stampiamo visibile e traslata un pelo verso il basso\r\n                                                [styles.cardView, this.rotateAndTranslate] :\r\n                                                [styles.cardView,{marginTop:this.nextCardPosition}]}/*opacity: this.nextCardOpacity,*/ /*,*/\r\n                                                {...this.PanResponder.panHandlers}>\r\n                        <TinderCard elem={item} actualIndex={this.state.currentIndex}/>\r\n                    </Animated.View>\r\n            else if (Math.abs(this.state.currentIndex -i) === SHOWABLE_CARDS)   //Se è la prima card che non visualizziamo\r\n                return <Animated.View style={ i===this.state.currentIndex ?         //La stampiamo con animazione\r\n                    [styles.cardView, this.rotateAndTranslate] :\r\n                    [styles.cardView,{marginTop:this.nextCardPosition,opacity: this.nextCardOpacity}]}\r\n                                      {...this.PanResponder.panHandlers}>\r\n                    <TinderCard elem={item} actualIndex={this.state.currentIndex}/>\r\n                </Animated.View>\r\n        }).reverse()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View style={styles.viewContainer}>\r\n                <Text style={styles.topText}>Scopri</Text>\r\n                <View style={{ height:\"10%\" }}>{/* Filter bar */}</View>\r\n                <View style={styles.cardContainer}>\r\n                    {this.renderCards()}\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}