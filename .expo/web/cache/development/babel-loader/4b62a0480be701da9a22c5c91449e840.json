{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Carousel, { Pagination } from 'react-native-snap-carousel';\nimport styles from \"./SliderBox.style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar width = Dimensions.get('window').width;\nexport var SliderBox = function (_Component) {\n  _inherits(SliderBox, _Component);\n\n  var _super = _createSuper(SliderBox);\n\n  function SliderBox(props) {\n    var _this;\n\n    _classCallCheck(this, SliderBox);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      currentImage: props.firstItem || 0,\n      loading: []\n    };\n    _this.onCurrentImagePressedHandler = _this.onCurrentImagePressedHandler.bind(_assertThisInitialized(_this));\n    _this.onSnap = _this.onSnap.bind(_assertThisInitialized(_this));\n    _this._renderItem = _this._renderItem.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(SliderBox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"onCurrentImagePressedHandler\",\n    value: function onCurrentImagePressedHandler() {\n      if (this.props.onCurrentImagePressed) {\n        this.props.onCurrentImagePressed(this.state.currentImage);\n      }\n    }\n  }, {\n    key: \"onSnap\",\n    value: function onSnap(index) {\n      var _this2 = this;\n\n      var currentImageEmitter = this.props.currentImageEmitter;\n      this.setState({\n        currentImage: index\n      }, function () {\n        if (currentImageEmitter) {\n          currentImageEmitter(_this2.state.currentImage);\n        }\n      });\n    }\n  }, {\n    key: \"_renderItem\",\n    value: function _renderItem(_ref) {\n      var _this3 = this;\n\n      var item = _ref.item,\n          index = _ref.index;\n      var _this$props = this.props,\n          ImageComponent = _this$props.ImageComponent,\n          _this$props$ImageComp = _this$props.ImageComponentStyle,\n          ImageComponentStyle = _this$props$ImageComp === void 0 ? {} : _this$props$ImageComp,\n          LoaderComponent = _this$props.LoaderComponent,\n          sliderBoxHeight = _this$props.sliderBoxHeight,\n          disableOnPress = _this$props.disableOnPress,\n          resizeMethod = _this$props.resizeMethod,\n          resizeMode = _this$props.resizeMode,\n          _this$props$imageLoad = _this$props.imageLoadingColor,\n          imageLoadingColor = _this$props$imageLoad === void 0 ? '#E91E63' : _this$props$imageLoad,\n          _this$props$underlayC = _this$props.underlayColor,\n          underlayColor = _this$props$underlayC === void 0 ? \"transparent\" : _this$props$underlayC,\n          _this$props$activeOpa = _this$props.activeOpacity,\n          activeOpacity = _this$props$activeOpa === void 0 ? 0.85 : _this$props$activeOpa;\n      return _jsxs(View, {\n        style: {\n          position: 'relative',\n          justifyContent: 'center'\n        },\n        children: [_jsx(TouchableHighlight, {\n          underlayColor: underlayColor,\n          disabled: disableOnPress,\n          onPress: this.onCurrentImagePressedHandler,\n          activeOpacity: activeOpacity,\n          children: _jsx(ImageComponent, _objectSpread({\n            style: [{\n              width: '100%',\n              height: sliderBoxHeight || 200,\n              alignSelf: 'center'\n            }, ImageComponentStyle],\n            source: typeof item === 'string' ? {\n              uri: item\n            } : item,\n            resizeMethod: resizeMethod || 'resize',\n            resizeMode: resizeMode || 'cover',\n            onLoadEnd: function onLoadEnd() {\n              var t = _this3.state.loading;\n              t[index] = true;\n\n              _this3.setState({\n                loading: t\n              });\n            }\n          }, this.props))\n        }, index), !this.state.loading[index] && _jsx(LoaderComponent, {\n          index: index,\n          size: \"large\",\n          color: imageLoadingColor,\n          style: {\n            position: 'absolute',\n            alignSelf: 'center'\n          }\n        })]\n      });\n    }\n  }, {\n    key: \"pagination\",\n    get: function get() {\n      var currentImage = this.state.currentImage;\n      var _this$props2 = this.props,\n          images = _this$props2.images,\n          dotStyle = _this$props2.dotStyle,\n          dotColor = _this$props2.dotColor,\n          inactiveDotColor = _this$props2.inactiveDotColor,\n          paginationBoxStyle = _this$props2.paginationBoxStyle,\n          paginationBoxVerticalPadding = _this$props2.paginationBoxVerticalPadding;\n      return _jsx(Pagination, _objectSpread({\n        borderRadius: 2,\n        dotsLength: images.length,\n        activeDotIndex: currentImage,\n        dotStyle: dotStyle || styles.dotStyle,\n        dotColor: dotColor || colors.dotColors,\n        inactiveDotColor: inactiveDotColor || colors.white,\n        inactiveDotScale: 0.8,\n        carouselRef: this._ref,\n        inactiveDotOpacity: 0.8,\n        tappableDots: !!this._ref,\n        containerStyle: [styles.paginationBoxStyle, paginationBoxVerticalPadding ? {\n          paddingVertical: paginationBoxVerticalPadding\n        } : {}, paginationBoxStyle ? paginationBoxStyle : {}]\n      }, this.props));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$props3 = this.props,\n          images = _this$props3.images,\n          circleLoop = _this$props3.circleLoop,\n          autoplay = _this$props3.autoplay,\n          parentWidth = _this$props3.parentWidth,\n          loopClonesPerSide = _this$props3.loopClonesPerSide,\n          autoplayDelay = _this$props3.autoplayDelay,\n          useScrollView = _this$props3.useScrollView;\n      return _jsxs(View, {\n        children: [_jsx(Carousel, _objectSpread({\n          autoplayDelay: autoplayDelay,\n          layout: 'default',\n          useScrollView: useScrollView,\n          data: images,\n          ref: function ref(c) {\n            return _this4._ref = c;\n          },\n          loop: circleLoop || false,\n          enableSnap: true,\n          autoplay: autoplay || false,\n          itemWidth: parentWidth || width,\n          sliderWidth: parentWidth || width,\n          loopClonesPerSide: loopClonesPerSide || 5,\n          renderItem: this._renderItem,\n          onSnapToItem: function onSnapToItem(index) {\n            return _this4.onSnap(index);\n          }\n        }, this.props)), images.length > 1 && this.pagination]\n      });\n    }\n  }]);\n\n  return SliderBox;\n}(Component);\nvar colors = {\n  dotColors: '#BDBDBD',\n  white: '#FFFFFF'\n};\nSliderBox.defaultProps = {\n  ImageComponent: Image,\n  LoaderComponent: ActivityIndicator\n};","map":{"version":3,"sources":["D:/UniversityProjects/Taas/Front-End TAAS/Taas-App/node_modules/react-native-image-slider-box/dist/SliderBox.js"],"names":["React","Component","Carousel","Pagination","styles","width","Dimensions","get","SliderBox","props","state","currentImage","firstItem","loading","onCurrentImagePressedHandler","bind","onSnap","_renderItem","onCurrentImagePressed","index","currentImageEmitter","setState","item","ImageComponent","ImageComponentStyle","LoaderComponent","sliderBoxHeight","disableOnPress","resizeMethod","resizeMode","imageLoadingColor","underlayColor","activeOpacity","position","justifyContent","height","alignSelf","uri","t","images","dotStyle","dotColor","inactiveDotColor","paginationBoxStyle","paginationBoxVerticalPadding","length","colors","dotColors","white","_ref","paddingVertical","circleLoop","autoplay","parentWidth","loopClonesPerSide","autoplayDelay","useScrollView","c","pagination","defaultProps","Image","ActivityIndicator"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {\n  View,\n  Image,\n  ActivityIndicator,\n  TouchableHighlight,\n  Dimensions,\n} from 'react-native';\n\nimport Carousel, {Pagination} from 'react-native-snap-carousel'; //Thank From distributer(s) of this lib\nimport styles from './SliderBox.style';\n\n// -------------------Props--------------------\n// images\n// onCurrentImagePressed\n// sliderBoxHeight\n// parentWidth\n// dotColor \n// inactiveDotColor\n// dotStyle\n// paginationBoxVerticalPadding\n// circleLoop\n// autoplay\n// ImageComponent\n// ImageLoader\n// paginationBoxStyle\n// resizeMethod\n// resizeMode\n// ImageComponentStyle,\n// imageLoadingColor = \"#E91E63\"\n// firstItem = 0\n// activeOpacity\n\nconst width = Dimensions.get('window').width;\n\nexport class SliderBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentImage: props.firstItem || 0,\n      loading: [],\n    };\n    this.onCurrentImagePressedHandler = this.onCurrentImagePressedHandler.bind(this);\n    this.onSnap = this.onSnap.bind(this);\n    this._renderItem = this._renderItem.bind(this);\n  }\n\n  componentDidMount() {\n    //let a = [...Array(this.props.images.length).keys()].map((i) => false);\n  }\n\n  onCurrentImagePressedHandler() {\n    if (this.props.onCurrentImagePressed) {\n      this.props.onCurrentImagePressed(this.state.currentImage);\n    }\n  }\n\n  onSnap(index) {\n    const {currentImageEmitter} = this.props;\n    this.setState({currentImage: index}, () => {\n      if (currentImageEmitter) {\n        currentImageEmitter(this.state.currentImage);\n      }\n    });\n  }\n\n  _renderItem({item, index}) {\n    const {\n      ImageComponent,\n      ImageComponentStyle = {},\n      LoaderComponent,\n      sliderBoxHeight,\n      disableOnPress,\n      resizeMethod,\n      resizeMode,\n      imageLoadingColor = '#E91E63',\n      underlayColor = \"transparent\",\n      activeOpacity=0.85\n    } = this.props;\n    return (\n      <View\n        style={{\n          position: 'relative',\n          justifyContent: 'center',\n        }}>\n        <TouchableHighlight\n          key={index}\n          underlayColor={underlayColor}\n          disabled={disableOnPress}\n          onPress={this.onCurrentImagePressedHandler}\n          activeOpacity={activeOpacity}\n        >\n\n          <ImageComponent\n            style={[\n              {\n                width: '100%',\n                height: sliderBoxHeight || 200,\n                alignSelf: 'center',\n              },\n              ImageComponentStyle,\n            ]}\n            source={typeof item === 'string' ? {uri: item} : item}\n            resizeMethod={resizeMethod || 'resize'}\n            resizeMode={resizeMode || 'cover'}\n            //onLoad={() => {}}\n            //onLoadStart={() => {}}\n            onLoadEnd={() => {\n              let t = this.state.loading;\n              t[index] = true;\n              this.setState({loading: t});\n            }}\n            {...this.props}\n          />\n        </TouchableHighlight>\n        {!this.state.loading[index] && (\n          <LoaderComponent\n            index={index}\n            size=\"large\"\n            color={imageLoadingColor}\n            style={{\n              position: 'absolute',\n              alignSelf: 'center',\n            }}\n          />\n        )}\n      </View>\n    );\n  }\n\n  get pagination() {\n    const {currentImage} = this.state;\n    const {\n      images,\n      dotStyle,\n      dotColor,\n      inactiveDotColor,\n      paginationBoxStyle,\n      paginationBoxVerticalPadding,\n    } = this.props;\n    return (\n      <Pagination\n        borderRadius={2}\n        dotsLength={images.length}\n        activeDotIndex={currentImage}\n        dotStyle={dotStyle || styles.dotStyle}\n        dotColor={dotColor || colors.dotColors}\n        inactiveDotColor={inactiveDotColor || colors.white}\n        inactiveDotScale={0.8}\n        carouselRef={this._ref}\n        inactiveDotOpacity={0.8}\n        tappableDots={!!this._ref}\n        containerStyle={[\n          styles.paginationBoxStyle,\n          paginationBoxVerticalPadding\n            ? {paddingVertical: paginationBoxVerticalPadding}\n            : {},\n          paginationBoxStyle ? paginationBoxStyle : {},\n        ]}\n        {...this.props}\n      />\n    );\n  }\n\n  render() {\n    const {\n      images,\n      circleLoop,\n      autoplay,\n      parentWidth,\n      loopClonesPerSide,\n      autoplayDelay,\n      useScrollView\n    } = this.props;\n    return (\n      <View>\n        <Carousel\n          autoplayDelay={autoplayDelay}\n          layout={'default'}\n          useScrollView={useScrollView}\n          data={images}\n          ref={(c) => (this._ref = c)}\n          loop={circleLoop || false}\n          enableSnap={true}\n          autoplay={autoplay || false}\n          itemWidth={parentWidth || width}\n          sliderWidth={parentWidth || width}\n          loopClonesPerSide={loopClonesPerSide || 5}\n          renderItem={this._renderItem}\n          onSnapToItem={(index) => this.onSnap(index)}\n          {...this.props}\n        />\n        {images.length > 1 && this.pagination}\n      </View>\n    );\n  }\n}\n\nconst colors = {\n  dotColors: '#BDBDBD',\n  white: '#FFFFFF',\n};\n\nSliderBox.defaultProps = {\n  ImageComponent: Image,\n  LoaderComponent: ActivityIndicator\n};"]},"metadata":{},"sourceType":"module"}